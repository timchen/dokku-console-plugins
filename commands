#!/usr/bin/env bash

set -e
export DOKKU_ROOT=${DOKKU_ROOT:='/home/git'}

function container_for ( ) {
  APP=$1
  cat $DOKKU_ROOT/$APP/CONTAINER
}

case "$1" in
  console)
    container=$(container_for $2)
    echo "console for $container ($2)"
    exec docker attach $container
  ;;
  prompt)
    container=$(container_for $2)
    if [[ -n $container ]] ; then
      echo exec docker run -i -t app/$2 /bin/bash
      cat && exec docker run -i -t app/$2 /bin/bash
    fi
    
  ;;
  console:rebuild)
    container=$(container_for $2)
    if [[ -n $container ]] ; then
      cat && exec docker run -i -t app/$2 /bin/bash -c /build/builder
    fi
    
  ;;
  version)
    ( cd $DOKKU_ROOT/$2;  git rev-parse HEAD )
  ;;
  list)
    for x in $DOKKU_ROOT/*; do
      if [[ -d $x ]] ; then
        basename $x
      fi
    done
  ;;
  list:all)
    echo "app container revision"
    for x in $DOKKU_ROOT/*; do
      if [[ -d $x && -f $x/CONTAINER ]] ; then
        app=$(basename $x)
        container=$(cat $x/CONTAINER)
        rev=$( (cd $x; git rev-parse HEAD) )
        echo "$app" "$container" "$rev"
      fi
    done
  ;;
  help)
    cat && cat <<EOF
    console <app>          # tail -f the live app console
    prompt <app>           # live prompt in your app's container
    console:rebuild <app>  # force rebuild of buildpack
    version                # commit hash of deployed app
    list                   # list all apps
    list:all               # list mapping of apps, containers, commit
EOF
  ;;
esac

